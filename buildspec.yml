version: 0.2
phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "Installing dependencies..."

  pre_build:
    commands:
      - echo "Prebuild phase..."
      - aws lambda get-function --function-name DeckDerbyJavaAPI --region us-east-1 > /dev/null 2>&1
      - if [[ $? -eq 0 ]]; then echo "Lambda function already exists, skipping redeployment..."; else echo "Lambda does not exist. Creating now..." && aws lambda create-function --function-name DeckDerbyJavaAPI --runtime java17 --handler deckderby.Handler::handleRequest --zip-file fileb://target/your-artifact.jar --region YourRegion; fi

  build:
    commands:
      - echo "Executing build using [ mvn clean package ]"
      - mvn clean package

  post_build:
    commands:
      - echo "Creating lambda if it doesn't exist..."
      - aws lambda get-function --function-name DeckDerbyJavaAPI --region us-east-1 > /dev/null 2>&1
      - if [[ $? -eq 0 ]]; then echo "Lambda function already exists, skipping redeployment..."; else echo "Lambda does not exist. Creating now..." && aws lambda create-function --function-name DeckDerbyJavaAPI --runtime java17 --handler deckderby.Handler::handleRequest --zip-file fileb://./target/deck-derby-api-1.0.jar --region us-east-1 --environment Variables={ENV=dev}; fi
      - echo "Updating lambda Function..."
      - aws lambda update-function-code --function-name DeckDerbyJavaAPI --zip-file fileb://./target/deck-derby-api-1.0.jar
      - echo "DONE!!"